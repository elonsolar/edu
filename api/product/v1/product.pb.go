// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: product/v1/product.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// sku
type CreateSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code             string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category         int32   `protobuf:"varint,3,opt,name=category,proto3" json:"category,omitempty"`
	Description      string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Specifications   string  `protobuf:"bytes,5,opt,name=specifications,proto3" json:"specifications,omitempty"`
	Price            float32 `protobuf:"fixed32,6,opt,name=price,proto3" json:"price,omitempty"`
	OccupiedQuantity float32 `protobuf:"fixed32,7,opt,name=occupied_quantity,json=occupiedQuantity,proto3" json:"occupied_quantity,omitempty"`
	Quantity         int32   `protobuf:"varint,8,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Unit             string  `protobuf:"bytes,9,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *CreateSkuRequest) Reset() {
	*x = CreateSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSkuRequest) ProtoMessage() {}

func (x *CreateSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSkuRequest.ProtoReflect.Descriptor instead.
func (*CreateSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSkuRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateSkuRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSkuRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *CreateSkuRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateSkuRequest) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

func (x *CreateSkuRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateSkuRequest) GetOccupiedQuantity() float32 {
	if x != nil {
		return x.OccupiedQuantity
	}
	return 0
}

func (x *CreateSkuRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CreateSkuRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type CreateSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSkuReply) Reset() {
	*x = CreateSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSkuReply) ProtoMessage() {}

func (x *CreateSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSkuReply.ProtoReflect.Descriptor instead.
func (*CreateSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{1}
}

type UpdateSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code             string  `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name             string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Category         int32   `protobuf:"varint,4,opt,name=category,proto3" json:"category,omitempty"`
	Description      string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Specifications   string  `protobuf:"bytes,6,opt,name=specifications,proto3" json:"specifications,omitempty"`
	Price            float32 `protobuf:"fixed32,7,opt,name=price,proto3" json:"price,omitempty"`
	OccupiedQuantity float32 `protobuf:"fixed32,8,opt,name=occupied_quantity,json=occupiedQuantity,proto3" json:"occupied_quantity,omitempty"`
	Version          int32   `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	Quantity         int32   `protobuf:"varint,10,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Unit             string  `protobuf:"bytes,11,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *UpdateSkuRequest) Reset() {
	*x = UpdateSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSkuRequest) ProtoMessage() {}

func (x *UpdateSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSkuRequest.ProtoReflect.Descriptor instead.
func (*UpdateSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSkuRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSkuRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateSkuRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSkuRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *UpdateSkuRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSkuRequest) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

func (x *UpdateSkuRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateSkuRequest) GetOccupiedQuantity() float32 {
	if x != nil {
		return x.OccupiedQuantity
	}
	return 0
}

func (x *UpdateSkuRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateSkuRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdateSkuRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type UpdateSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSkuReply) Reset() {
	*x = UpdateSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSkuReply) ProtoMessage() {}

func (x *UpdateSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSkuReply.ProtoReflect.Descriptor instead.
func (*UpdateSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{3}
}

type DeleteSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSkuRequest) Reset() {
	*x = DeleteSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSkuRequest) ProtoMessage() {}

func (x *DeleteSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSkuRequest.ProtoReflect.Descriptor instead.
func (*DeleteSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteSkuRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSkuReply) Reset() {
	*x = DeleteSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSkuReply) ProtoMessage() {}

func (x *DeleteSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSkuReply.ProtoReflect.Descriptor instead.
func (*DeleteSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{5}
}

type GetSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSkuRequest) Reset() {
	*x = GetSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSkuRequest) ProtoMessage() {}

func (x *GetSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSkuRequest.ProtoReflect.Descriptor instead.
func (*GetSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{6}
}

func (x *GetSkuRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code             string  `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name             string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Category         int32   `protobuf:"varint,4,opt,name=category,proto3" json:"category,omitempty"`
	Description      string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Specifications   string  `protobuf:"bytes,6,opt,name=specifications,proto3" json:"specifications,omitempty"`
	Price            float32 `protobuf:"fixed32,7,opt,name=price,proto3" json:"price,omitempty"`
	OccupiedQuantity float32 `protobuf:"fixed32,8,opt,name=occupied_quantity,json=occupiedQuantity,proto3" json:"occupied_quantity,omitempty"`
	Version          int32   `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	Quantity         int32   `protobuf:"varint,10,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Unit             string  `protobuf:"bytes,11,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *GetSkuReply) Reset() {
	*x = GetSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSkuReply) ProtoMessage() {}

func (x *GetSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSkuReply.ProtoReflect.Descriptor instead.
func (*GetSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{7}
}

func (x *GetSkuReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSkuReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetSkuReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSkuReply) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *GetSkuReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetSkuReply) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

func (x *GetSkuReply) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetSkuReply) GetOccupiedQuantity() float32 {
	if x != nil {
		return x.OccupiedQuantity
	}
	return 0
}

func (x *GetSkuReply) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetSkuReply) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GetSkuReply) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type ListSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr     string `protobuf:"bytes,1,opt,name=expr,proto3" json:"expr,omitempty"`
	PageNo   int32  `protobuf:"varint,2,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListSkuRequest) Reset() {
	*x = ListSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkuRequest) ProtoMessage() {}

func (x *ListSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkuRequest.ProtoReflect.Descriptor instead.
func (*ListSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{8}
}

func (x *ListSkuRequest) GetExpr() string {
	if x != nil {
		return x.Expr
	}
	return ""
}

func (x *ListSkuRequest) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListSkuRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*ListSkuReply_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int32                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListSkuReply) Reset() {
	*x = ListSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkuReply) ProtoMessage() {}

func (x *ListSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkuReply.ProtoReflect.Descriptor instead.
func (*ListSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{9}
}

func (x *ListSkuReply) GetData() []*ListSkuReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListSkuReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TakeDownSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TakeDownSkuRequest) Reset() {
	*x = TakeDownSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeDownSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeDownSkuRequest) ProtoMessage() {}

func (x *TakeDownSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeDownSkuRequest.ProtoReflect.Descriptor instead.
func (*TakeDownSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{10}
}

func (x *TakeDownSkuRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TakeDownSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TakeDownSkuReply) Reset() {
	*x = TakeDownSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeDownSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeDownSkuReply) ProtoMessage() {}

func (x *TakeDownSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeDownSkuReply.ProtoReflect.Descriptor instead.
func (*TakeDownSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{11}
}

type PlaceUpSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PlaceUpSkuRequest) Reset() {
	*x = PlaceUpSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceUpSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceUpSkuRequest) ProtoMessage() {}

func (x *PlaceUpSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceUpSkuRequest.ProtoReflect.Descriptor instead.
func (*PlaceUpSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{12}
}

func (x *PlaceUpSkuRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PlaceUpSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlaceUpSkuReply) Reset() {
	*x = PlaceUpSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceUpSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceUpSkuReply) ProtoMessage() {}

func (x *PlaceUpSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceUpSkuReply.ProtoReflect.Descriptor instead.
func (*PlaceUpSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{13}
}

type CreateCombineSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string                          `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name        string                          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                          `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32                         `protobuf:"fixed32,7,opt,name=price,proto3" json:"price,omitempty"`
	ItemList    []*CreateCombineSkuRequest_Item `protobuf:"bytes,8,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
}

func (x *CreateCombineSkuRequest) Reset() {
	*x = CreateCombineSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCombineSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCombineSkuRequest) ProtoMessage() {}

func (x *CreateCombineSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCombineSkuRequest.ProtoReflect.Descriptor instead.
func (*CreateCombineSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{14}
}

func (x *CreateCombineSkuRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateCombineSkuRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCombineSkuRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateCombineSkuRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateCombineSkuRequest) GetItemList() []*CreateCombineSkuRequest_Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type CreateCombineSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCombineSkuReply) Reset() {
	*x = CreateCombineSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCombineSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCombineSkuReply) ProtoMessage() {}

func (x *CreateCombineSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCombineSkuReply.ProtoReflect.Descriptor instead.
func (*CreateCombineSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{15}
}

type UpdateCombineSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code        string                          `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name        string                          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                          `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32                         `protobuf:"fixed32,7,opt,name=price,proto3" json:"price,omitempty"`
	Version     int32                           `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	ItemList    []*UpdateCombineSkuRequest_Item `protobuf:"bytes,10,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
}

func (x *UpdateCombineSkuRequest) Reset() {
	*x = UpdateCombineSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCombineSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCombineSkuRequest) ProtoMessage() {}

func (x *UpdateCombineSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCombineSkuRequest.ProtoReflect.Descriptor instead.
func (*UpdateCombineSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateCombineSkuRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCombineSkuRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateCombineSkuRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCombineSkuRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateCombineSkuRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateCombineSkuRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateCombineSkuRequest) GetItemList() []*UpdateCombineSkuRequest_Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type UpdateCombineSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCombineSkuReply) Reset() {
	*x = UpdateCombineSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCombineSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCombineSkuReply) ProtoMessage() {}

func (x *UpdateCombineSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCombineSkuReply.ProtoReflect.Descriptor instead.
func (*UpdateCombineSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{17}
}

type DeleteCombineSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCombineSkuRequest) Reset() {
	*x = DeleteCombineSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCombineSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCombineSkuRequest) ProtoMessage() {}

func (x *DeleteCombineSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCombineSkuRequest.ProtoReflect.Descriptor instead.
func (*DeleteCombineSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteCombineSkuRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCombineSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCombineSkuReply) Reset() {
	*x = DeleteCombineSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCombineSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCombineSkuReply) ProtoMessage() {}

func (x *DeleteCombineSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCombineSkuReply.ProtoReflect.Descriptor instead.
func (*DeleteCombineSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{19}
}

type GetCombineSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCombineSkuRequest) Reset() {
	*x = GetCombineSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCombineSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCombineSkuRequest) ProtoMessage() {}

func (x *GetCombineSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCombineSkuRequest.ProtoReflect.Descriptor instead.
func (*GetCombineSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{20}
}

func (x *GetCombineSkuRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCombineSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code        string  `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name        string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32 `protobuf:"fixed32,7,opt,name=price,proto3" json:"price,omitempty"`
	Version     int32   `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetCombineSkuReply) Reset() {
	*x = GetCombineSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCombineSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCombineSkuReply) ProtoMessage() {}

func (x *GetCombineSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCombineSkuReply.ProtoReflect.Descriptor instead.
func (*GetCombineSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{21}
}

func (x *GetCombineSkuReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCombineSkuReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetCombineSkuReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCombineSkuReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetCombineSkuReply) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetCombineSkuReply) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ListCombineSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr     string `protobuf:"bytes,1,opt,name=expr,proto3" json:"expr,omitempty"`
	PageNo   int32  `protobuf:"varint,2,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListCombineSkuRequest) Reset() {
	*x = ListCombineSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCombineSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCombineSkuRequest) ProtoMessage() {}

func (x *ListCombineSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCombineSkuRequest.ProtoReflect.Descriptor instead.
func (*ListCombineSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{22}
}

func (x *ListCombineSkuRequest) GetExpr() string {
	if x != nil {
		return x.Expr
	}
	return ""
}

func (x *ListCombineSkuRequest) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListCombineSkuRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListCombineSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*ListCombineSkuReply_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int32                       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListCombineSkuReply) Reset() {
	*x = ListCombineSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCombineSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCombineSkuReply) ProtoMessage() {}

func (x *ListCombineSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCombineSkuReply.ProtoReflect.Descriptor instead.
func (*ListCombineSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{23}
}

func (x *ListCombineSkuReply) GetData() []*ListCombineSkuReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListCombineSkuReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TakeDownCombineSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TakeDownCombineSkuRequest) Reset() {
	*x = TakeDownCombineSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeDownCombineSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeDownCombineSkuRequest) ProtoMessage() {}

func (x *TakeDownCombineSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeDownCombineSkuRequest.ProtoReflect.Descriptor instead.
func (*TakeDownCombineSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{24}
}

func (x *TakeDownCombineSkuRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TakeDownCombineSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TakeDownCombineSkuReply) Reset() {
	*x = TakeDownCombineSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeDownCombineSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeDownCombineSkuReply) ProtoMessage() {}

func (x *TakeDownCombineSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeDownCombineSkuReply.ProtoReflect.Descriptor instead.
func (*TakeDownCombineSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{25}
}

type PlaceUpCombineSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PlaceUpCombineSkuRequest) Reset() {
	*x = PlaceUpCombineSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceUpCombineSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceUpCombineSkuRequest) ProtoMessage() {}

func (x *PlaceUpCombineSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceUpCombineSkuRequest.ProtoReflect.Descriptor instead.
func (*PlaceUpCombineSkuRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{26}
}

func (x *PlaceUpCombineSkuRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PlaceUpCombineSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlaceUpCombineSkuReply) Reset() {
	*x = PlaceUpCombineSkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceUpCombineSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceUpCombineSkuReply) ProtoMessage() {}

func (x *PlaceUpCombineSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceUpCombineSkuReply.ProtoReflect.Descriptor instead.
func (*PlaceUpCombineSkuReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{27}
}

// combineSkuItem
type CreateCombineSkuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineId   int32   `protobuf:"varint,1,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"` //组合商品ID
	SkuId       int32   `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`             //商品ID
	SkuCode     string  `protobuf:"bytes,3,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`
	SkuName     string  `protobuf:"bytes,4,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	SkuPrice    float32 `protobuf:"fixed32,5,opt,name=sku_price,json=skuPrice,proto3" json:"sku_price,omitempty"`
	SkuQuantity int32   `protobuf:"varint,6,opt,name=sku_quantity,json=skuQuantity,proto3" json:"sku_quantity,omitempty"` // 数量
}

func (x *CreateCombineSkuItemRequest) Reset() {
	*x = CreateCombineSkuItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCombineSkuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCombineSkuItemRequest) ProtoMessage() {}

func (x *CreateCombineSkuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCombineSkuItemRequest.ProtoReflect.Descriptor instead.
func (*CreateCombineSkuItemRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{28}
}

func (x *CreateCombineSkuItemRequest) GetCombineId() int32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *CreateCombineSkuItemRequest) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CreateCombineSkuItemRequest) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *CreateCombineSkuItemRequest) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *CreateCombineSkuItemRequest) GetSkuPrice() float32 {
	if x != nil {
		return x.SkuPrice
	}
	return 0
}

func (x *CreateCombineSkuItemRequest) GetSkuQuantity() int32 {
	if x != nil {
		return x.SkuQuantity
	}
	return 0
}

type CreateCombineSkuItemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCombineSkuItemReply) Reset() {
	*x = CreateCombineSkuItemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCombineSkuItemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCombineSkuItemReply) ProtoMessage() {}

func (x *CreateCombineSkuItemReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCombineSkuItemReply.ProtoReflect.Descriptor instead.
func (*CreateCombineSkuItemReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{29}
}

type UpdateCombineSkuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CombineId   int32   `protobuf:"varint,2,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"` //组合商品ID
	SkuId       int32   `protobuf:"varint,3,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`             //商品ID
	SkuCode     string  `protobuf:"bytes,4,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`
	SkuName     string  `protobuf:"bytes,5,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	SkuPrice    float32 `protobuf:"fixed32,6,opt,name=sku_price,json=skuPrice,proto3" json:"sku_price,omitempty"`
	SkuQuantity int32   `protobuf:"varint,7,opt,name=sku_quantity,json=skuQuantity,proto3" json:"sku_quantity,omitempty"` // 数量
	Version     int32   `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateCombineSkuItemRequest) Reset() {
	*x = UpdateCombineSkuItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCombineSkuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCombineSkuItemRequest) ProtoMessage() {}

func (x *UpdateCombineSkuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCombineSkuItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateCombineSkuItemRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateCombineSkuItemRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCombineSkuItemRequest) GetCombineId() int32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *UpdateCombineSkuItemRequest) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *UpdateCombineSkuItemRequest) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *UpdateCombineSkuItemRequest) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *UpdateCombineSkuItemRequest) GetSkuPrice() float32 {
	if x != nil {
		return x.SkuPrice
	}
	return 0
}

func (x *UpdateCombineSkuItemRequest) GetSkuQuantity() int32 {
	if x != nil {
		return x.SkuQuantity
	}
	return 0
}

func (x *UpdateCombineSkuItemRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type UpdateCombineSkuItemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCombineSkuItemReply) Reset() {
	*x = UpdateCombineSkuItemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCombineSkuItemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCombineSkuItemReply) ProtoMessage() {}

func (x *UpdateCombineSkuItemReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCombineSkuItemReply.ProtoReflect.Descriptor instead.
func (*UpdateCombineSkuItemReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{31}
}

type DeleteCombineSkuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCombineSkuItemRequest) Reset() {
	*x = DeleteCombineSkuItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCombineSkuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCombineSkuItemRequest) ProtoMessage() {}

func (x *DeleteCombineSkuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCombineSkuItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteCombineSkuItemRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteCombineSkuItemRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCombineSkuItemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCombineSkuItemReply) Reset() {
	*x = DeleteCombineSkuItemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCombineSkuItemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCombineSkuItemReply) ProtoMessage() {}

func (x *DeleteCombineSkuItemReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCombineSkuItemReply.ProtoReflect.Descriptor instead.
func (*DeleteCombineSkuItemReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{33}
}

type GetCombineSkuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCombineSkuItemRequest) Reset() {
	*x = GetCombineSkuItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCombineSkuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCombineSkuItemRequest) ProtoMessage() {}

func (x *GetCombineSkuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCombineSkuItemRequest.ProtoReflect.Descriptor instead.
func (*GetCombineSkuItemRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{34}
}

func (x *GetCombineSkuItemRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCombineSkuItemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CombineId   int32   `protobuf:"varint,2,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"` //组合商品ID
	SkuId       int32   `protobuf:"varint,3,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`             //商品ID
	SkuCode     string  `protobuf:"bytes,4,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`
	SkuName     string  `protobuf:"bytes,5,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	SkuPrice    float32 `protobuf:"fixed32,6,opt,name=sku_price,json=skuPrice,proto3" json:"sku_price,omitempty"`
	SkuQuantity int32   `protobuf:"varint,7,opt,name=sku_quantity,json=skuQuantity,proto3" json:"sku_quantity,omitempty"` // 数量
	Version     int32   `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetCombineSkuItemReply) Reset() {
	*x = GetCombineSkuItemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCombineSkuItemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCombineSkuItemReply) ProtoMessage() {}

func (x *GetCombineSkuItemReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCombineSkuItemReply.ProtoReflect.Descriptor instead.
func (*GetCombineSkuItemReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{35}
}

func (x *GetCombineSkuItemReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCombineSkuItemReply) GetCombineId() int32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *GetCombineSkuItemReply) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *GetCombineSkuItemReply) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *GetCombineSkuItemReply) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *GetCombineSkuItemReply) GetSkuPrice() float32 {
	if x != nil {
		return x.SkuPrice
	}
	return 0
}

func (x *GetCombineSkuItemReply) GetSkuQuantity() int32 {
	if x != nil {
		return x.SkuQuantity
	}
	return 0
}

func (x *GetCombineSkuItemReply) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ListCombineSkuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr     string `protobuf:"bytes,1,opt,name=expr,proto3" json:"expr,omitempty"`
	PageNo   int32  `protobuf:"varint,2,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListCombineSkuItemRequest) Reset() {
	*x = ListCombineSkuItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCombineSkuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCombineSkuItemRequest) ProtoMessage() {}

func (x *ListCombineSkuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCombineSkuItemRequest.ProtoReflect.Descriptor instead.
func (*ListCombineSkuItemRequest) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{36}
}

func (x *ListCombineSkuItemRequest) GetExpr() string {
	if x != nil {
		return x.Expr
	}
	return ""
}

func (x *ListCombineSkuItemRequest) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListCombineSkuItemRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListCombineSkuItemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*ListCombineSkuItemReply_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int32                           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListCombineSkuItemReply) Reset() {
	*x = ListCombineSkuItemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCombineSkuItemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCombineSkuItemReply) ProtoMessage() {}

func (x *ListCombineSkuItemReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCombineSkuItemReply.ProtoReflect.Descriptor instead.
func (*ListCombineSkuItemReply) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{37}
}

func (x *ListCombineSkuItemReply) GetData() []*ListCombineSkuItemReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListCombineSkuItemReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListSkuReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code             string  `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name             string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Category         int32   `protobuf:"varint,4,opt,name=category,proto3" json:"category,omitempty"`
	Description      string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Specifications   string  `protobuf:"bytes,6,opt,name=specifications,proto3" json:"specifications,omitempty"`
	Price            float32 `protobuf:"fixed32,7,opt,name=price,proto3" json:"price,omitempty"`
	OccupiedQuantity float32 `protobuf:"fixed32,8,opt,name=occupied_quantity,json=occupiedQuantity,proto3" json:"occupied_quantity,omitempty"`
	Version          int32   `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	Status           int32   `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	Quantity         int32   `protobuf:"varint,11,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UpdatedAt        string  `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Unit             string  `protobuf:"bytes,13,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *ListSkuReply_Data) Reset() {
	*x = ListSkuReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkuReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkuReply_Data) ProtoMessage() {}

func (x *ListSkuReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkuReply_Data.ProtoReflect.Descriptor instead.
func (*ListSkuReply_Data) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListSkuReply_Data) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListSkuReply_Data) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListSkuReply_Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListSkuReply_Data) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *ListSkuReply_Data) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListSkuReply_Data) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

func (x *ListSkuReply_Data) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ListSkuReply_Data) GetOccupiedQuantity() float32 {
	if x != nil {
		return x.OccupiedQuantity
	}
	return 0
}

func (x *ListSkuReply_Data) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ListSkuReply_Data) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListSkuReply_Data) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ListSkuReply_Data) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ListSkuReply_Data) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type CreateCombineSkuRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineId   int32   `protobuf:"varint,1,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"` //组合商品ID
	SkuId       int32   `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`             //商品ID
	SkuCode     string  `protobuf:"bytes,3,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`
	SkuName     string  `protobuf:"bytes,4,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	SkuPrice    float32 `protobuf:"fixed32,5,opt,name=sku_price,json=skuPrice,proto3" json:"sku_price,omitempty"`
	SkuQuantity int32   `protobuf:"varint,6,opt,name=sku_quantity,json=skuQuantity,proto3" json:"sku_quantity,omitempty"`
}

func (x *CreateCombineSkuRequest_Item) Reset() {
	*x = CreateCombineSkuRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCombineSkuRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCombineSkuRequest_Item) ProtoMessage() {}

func (x *CreateCombineSkuRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCombineSkuRequest_Item.ProtoReflect.Descriptor instead.
func (*CreateCombineSkuRequest_Item) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CreateCombineSkuRequest_Item) GetCombineId() int32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *CreateCombineSkuRequest_Item) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CreateCombineSkuRequest_Item) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *CreateCombineSkuRequest_Item) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *CreateCombineSkuRequest_Item) GetSkuPrice() float32 {
	if x != nil {
		return x.SkuPrice
	}
	return 0
}

func (x *CreateCombineSkuRequest_Item) GetSkuQuantity() int32 {
	if x != nil {
		return x.SkuQuantity
	}
	return 0
}

type UpdateCombineSkuRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CombineId   int32   `protobuf:"varint,2,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"` //组合商品ID
	SkuId       int32   `protobuf:"varint,3,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`             //商品ID
	SkuCode     string  `protobuf:"bytes,4,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`
	SkuName     string  `protobuf:"bytes,5,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	SkuPrice    float32 `protobuf:"fixed32,6,opt,name=sku_price,json=skuPrice,proto3" json:"sku_price,omitempty"`
	SkuQuantity int32   `protobuf:"varint,7,opt,name=sku_quantity,json=skuQuantity,proto3" json:"sku_quantity,omitempty"`
}

func (x *UpdateCombineSkuRequest_Item) Reset() {
	*x = UpdateCombineSkuRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCombineSkuRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCombineSkuRequest_Item) ProtoMessage() {}

func (x *UpdateCombineSkuRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCombineSkuRequest_Item.ProtoReflect.Descriptor instead.
func (*UpdateCombineSkuRequest_Item) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{16, 0}
}

func (x *UpdateCombineSkuRequest_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCombineSkuRequest_Item) GetCombineId() int32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *UpdateCombineSkuRequest_Item) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *UpdateCombineSkuRequest_Item) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *UpdateCombineSkuRequest_Item) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *UpdateCombineSkuRequest_Item) GetSkuPrice() float32 {
	if x != nil {
		return x.SkuPrice
	}
	return 0
}

func (x *UpdateCombineSkuRequest_Item) GetSkuQuantity() int32 {
	if x != nil {
		return x.SkuQuantity
	}
	return 0
}

type ListCombineSkuReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code        string  `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name        string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32 `protobuf:"fixed32,7,opt,name=price,proto3" json:"price,omitempty"`
	Status      int32   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Version     int32   `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	UpdatedAt   string  `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ListCombineSkuReply_Data) Reset() {
	*x = ListCombineSkuReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCombineSkuReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCombineSkuReply_Data) ProtoMessage() {}

func (x *ListCombineSkuReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCombineSkuReply_Data.ProtoReflect.Descriptor instead.
func (*ListCombineSkuReply_Data) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{23, 0}
}

func (x *ListCombineSkuReply_Data) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListCombineSkuReply_Data) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListCombineSkuReply_Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListCombineSkuReply_Data) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListCombineSkuReply_Data) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ListCombineSkuReply_Data) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListCombineSkuReply_Data) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ListCombineSkuReply_Data) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ListCombineSkuItemReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CombineId   int32   `protobuf:"varint,2,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"` //组合商品ID
	SkuId       int32   `protobuf:"varint,3,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`             //商品ID
	SkuCode     string  `protobuf:"bytes,4,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`
	SkuName     string  `protobuf:"bytes,5,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	SkuPrice    float32 `protobuf:"fixed32,6,opt,name=sku_price,json=skuPrice,proto3" json:"sku_price,omitempty"`
	SkuQuantity int32   `protobuf:"varint,7,opt,name=sku_quantity,json=skuQuantity,proto3" json:"sku_quantity,omitempty"` // 数量
	Version     int32   `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	UpdatedAt   string  `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ListCombineSkuItemReply_Data) Reset() {
	*x = ListCombineSkuItemReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_v1_product_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCombineSkuItemReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCombineSkuItemReply_Data) ProtoMessage() {}

func (x *ListCombineSkuItemReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_product_v1_product_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCombineSkuItemReply_Data.ProtoReflect.Descriptor instead.
func (*ListCombineSkuItemReply_Data) Descriptor() ([]byte, []int) {
	return file_product_v1_product_proto_rawDescGZIP(), []int{37, 0}
}

func (x *ListCombineSkuItemReply_Data) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListCombineSkuItemReply_Data) GetCombineId() int32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *ListCombineSkuItemReply_Data) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *ListCombineSkuItemReply_Data) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *ListCombineSkuItemReply_Data) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *ListCombineSkuItemReply_Data) GetSkuPrice() float32 {
	if x != nil {
		return x.SkuPrice
	}
	return 0
}

func (x *ListCombineSkuItemReply_Data) GetSkuQuantity() int32 {
	if x != nil {
		return x.SkuQuantity
	}
	return 0
}

func (x *ListCombineSkuItemReply_Data) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ListCombineSkuItemReply_Data) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_product_v1_product_proto protoreflect.FileDescriptor

var file_product_v1_product_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69,
	0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xbd, 0x02, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65,
	0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x10, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x10, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb8, 0x02, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x63, 0x63,
	0x75, 0x70, 0x69, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x22, 0x5a, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x65, 0x78, 0x70, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc2, 0x03, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x75,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xe8, 0x02, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10,
	0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x22, 0x24, 0x0a, 0x12, 0x54, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x75,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x54, 0x61, 0x6b, 0x65, 0x44,
	0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x0a, 0x11, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x11, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x53, 0x6b, 0x75, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0xf5, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x45, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0xb2, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x6b, 0x75, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x73, 0x6b, 0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b, 0x75, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x73, 0x6b, 0x75, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0xaf, 0x03, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x1a, 0xc2, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x75, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x6b, 0x75, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b, 0x75, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6b, 0x75, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x78, 0x70, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0xaf, 0x02, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53,
	0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b,
	0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xc7, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x2b, 0x0a, 0x19, 0x54, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19,
	0x0a, 0x17, 0x54, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x0a, 0x18, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x55, 0x70, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0xc9, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x6b, 0x75, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x73, 0x6b, 0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b, 0x75, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x73, 0x6b, 0x75, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x1b, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xf3, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x75, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x6b, 0x75, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b, 0x75, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6b, 0x75, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1b,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53,
	0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x0a, 0x1b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x6b, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b,
	0x75, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73,
	0x6b, 0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b, 0x75, 0x5f, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x6b, 0x75, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x65, 0x78, 0x70, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xeb, 0x02, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b,
	0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xfb, 0x01, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b,
	0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b,
	0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x75, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x6b, 0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x6b, 0x75, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6b, 0x75, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xe4, 0x10, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x56, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x6b, 0x75, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x09, 0x3a, 0x01, 0x2a, 0x22, 0x04, 0x2f, 0x73, 0x6b, 0x75, 0x12, 0x5b, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b,
	0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x1a,
	0x09, 0x2f, 0x73, 0x6b, 0x75, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x58, 0x0a, 0x09, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x2a, 0x09, 0x2f, 0x73, 0x6b, 0x75, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x0c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x06, 0x12, 0x04, 0x2f, 0x73, 0x6b, 0x75,
	0x12, 0x52, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x75,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x73, 0x6b, 0x75, 0x2f,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x62, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x53,
	0x6b, 0x75, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x73, 0x6b, 0x75, 0x2f,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x2d, 0x75, 0x70, 0x12, 0x66, 0x0a, 0x0b, 0x54, 0x61, 0x6b, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x75, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x75,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x75,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a,
	0x22, 0x0e, 0x2f, 0x73, 0x6b, 0x75, 0x2f, 0x74, 0x61, 0x6b, 0x65, 0x2d, 0x64, 0x6f, 0x77, 0x6e,
	0x12, 0x73, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x53, 0x6b, 0x75, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53,
	0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x2d, 0x73, 0x6b, 0x75, 0x12, 0x78, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x1a, 0x11, 0x2f, 0x63,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x73, 0x6b, 0x75, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x75, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x53, 0x6b, 0x75, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b,
	0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x73, 0x6b,
	0x75, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x67, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53,
	0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0e, 0x12, 0x0c, 0x2f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x73, 0x6b, 0x75, 0x12,
	0x6f, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b,
	0x75, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f,
	0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x73, 0x6b, 0x75, 0x2f, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x7f, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x53, 0x6b, 0x75, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x2d, 0x73, 0x6b, 0x75, 0x2f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2d, 0x75,
	0x70, 0x12, 0x83, 0x01, 0x0a, 0x12, 0x54, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x6b,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22,
	0x16, 0x2f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x73, 0x6b, 0x75, 0x2f, 0x74, 0x61,
	0x6b, 0x65, 0x2d, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x84, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x63, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x73, 0x6b, 0x75, 0x2d, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x89,
	0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a,
	0x01, 0x2a, 0x1a, 0x16, 0x2f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x73, 0x6b, 0x75,
	0x2d, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x86, 0x01, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b,
	0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x63, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x73, 0x6b, 0x75, 0x2d, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x78, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x2d, 0x73, 0x6b, 0x75, 0x2d, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x80, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x63, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x2d, 0x73, 0x6b, 0x75, 0x2d, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x70, 0x61, 0x67, 0x65,
	0x42, 0x41, 0x0a, 0x19, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x73,
	0x61, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x15, 0x65, 0x64,
	0x75, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_product_v1_product_proto_rawDescOnce sync.Once
	file_product_v1_product_proto_rawDescData = file_product_v1_product_proto_rawDesc
)

func file_product_v1_product_proto_rawDescGZIP() []byte {
	file_product_v1_product_proto_rawDescOnce.Do(func() {
		file_product_v1_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_v1_product_proto_rawDescData)
	})
	return file_product_v1_product_proto_rawDescData
}

var file_product_v1_product_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_product_v1_product_proto_goTypes = []interface{}{
	(*CreateSkuRequest)(nil),             // 0: product.v1.CreateSkuRequest
	(*CreateSkuReply)(nil),               // 1: product.v1.CreateSkuReply
	(*UpdateSkuRequest)(nil),             // 2: product.v1.UpdateSkuRequest
	(*UpdateSkuReply)(nil),               // 3: product.v1.UpdateSkuReply
	(*DeleteSkuRequest)(nil),             // 4: product.v1.DeleteSkuRequest
	(*DeleteSkuReply)(nil),               // 5: product.v1.DeleteSkuReply
	(*GetSkuRequest)(nil),                // 6: product.v1.GetSkuRequest
	(*GetSkuReply)(nil),                  // 7: product.v1.GetSkuReply
	(*ListSkuRequest)(nil),               // 8: product.v1.ListSkuRequest
	(*ListSkuReply)(nil),                 // 9: product.v1.ListSkuReply
	(*TakeDownSkuRequest)(nil),           // 10: product.v1.TakeDownSkuRequest
	(*TakeDownSkuReply)(nil),             // 11: product.v1.TakeDownSkuReply
	(*PlaceUpSkuRequest)(nil),            // 12: product.v1.PlaceUpSkuRequest
	(*PlaceUpSkuReply)(nil),              // 13: product.v1.PlaceUpSkuReply
	(*CreateCombineSkuRequest)(nil),      // 14: product.v1.CreateCombineSkuRequest
	(*CreateCombineSkuReply)(nil),        // 15: product.v1.CreateCombineSkuReply
	(*UpdateCombineSkuRequest)(nil),      // 16: product.v1.UpdateCombineSkuRequest
	(*UpdateCombineSkuReply)(nil),        // 17: product.v1.UpdateCombineSkuReply
	(*DeleteCombineSkuRequest)(nil),      // 18: product.v1.DeleteCombineSkuRequest
	(*DeleteCombineSkuReply)(nil),        // 19: product.v1.DeleteCombineSkuReply
	(*GetCombineSkuRequest)(nil),         // 20: product.v1.GetCombineSkuRequest
	(*GetCombineSkuReply)(nil),           // 21: product.v1.GetCombineSkuReply
	(*ListCombineSkuRequest)(nil),        // 22: product.v1.ListCombineSkuRequest
	(*ListCombineSkuReply)(nil),          // 23: product.v1.ListCombineSkuReply
	(*TakeDownCombineSkuRequest)(nil),    // 24: product.v1.TakeDownCombineSkuRequest
	(*TakeDownCombineSkuReply)(nil),      // 25: product.v1.TakeDownCombineSkuReply
	(*PlaceUpCombineSkuRequest)(nil),     // 26: product.v1.PlaceUpCombineSkuRequest
	(*PlaceUpCombineSkuReply)(nil),       // 27: product.v1.PlaceUpCombineSkuReply
	(*CreateCombineSkuItemRequest)(nil),  // 28: product.v1.CreateCombineSkuItemRequest
	(*CreateCombineSkuItemReply)(nil),    // 29: product.v1.CreateCombineSkuItemReply
	(*UpdateCombineSkuItemRequest)(nil),  // 30: product.v1.UpdateCombineSkuItemRequest
	(*UpdateCombineSkuItemReply)(nil),    // 31: product.v1.UpdateCombineSkuItemReply
	(*DeleteCombineSkuItemRequest)(nil),  // 32: product.v1.DeleteCombineSkuItemRequest
	(*DeleteCombineSkuItemReply)(nil),    // 33: product.v1.DeleteCombineSkuItemReply
	(*GetCombineSkuItemRequest)(nil),     // 34: product.v1.GetCombineSkuItemRequest
	(*GetCombineSkuItemReply)(nil),       // 35: product.v1.GetCombineSkuItemReply
	(*ListCombineSkuItemRequest)(nil),    // 36: product.v1.ListCombineSkuItemRequest
	(*ListCombineSkuItemReply)(nil),      // 37: product.v1.ListCombineSkuItemReply
	(*ListSkuReply_Data)(nil),            // 38: product.v1.ListSkuReply.Data
	(*CreateCombineSkuRequest_Item)(nil), // 39: product.v1.CreateCombineSkuRequest.Item
	(*UpdateCombineSkuRequest_Item)(nil), // 40: product.v1.UpdateCombineSkuRequest.Item
	(*ListCombineSkuReply_Data)(nil),     // 41: product.v1.ListCombineSkuReply.Data
	(*ListCombineSkuItemReply_Data)(nil), // 42: product.v1.ListCombineSkuItemReply.Data
}
var file_product_v1_product_proto_depIdxs = []int32{
	38, // 0: product.v1.ListSkuReply.data:type_name -> product.v1.ListSkuReply.Data
	39, // 1: product.v1.CreateCombineSkuRequest.item_list:type_name -> product.v1.CreateCombineSkuRequest.Item
	40, // 2: product.v1.UpdateCombineSkuRequest.item_list:type_name -> product.v1.UpdateCombineSkuRequest.Item
	41, // 3: product.v1.ListCombineSkuReply.data:type_name -> product.v1.ListCombineSkuReply.Data
	42, // 4: product.v1.ListCombineSkuItemReply.data:type_name -> product.v1.ListCombineSkuItemReply.Data
	0,  // 5: product.v1.Product.CreateSku:input_type -> product.v1.CreateSkuRequest
	2,  // 6: product.v1.Product.UpdateSku:input_type -> product.v1.UpdateSkuRequest
	4,  // 7: product.v1.Product.DeleteSku:input_type -> product.v1.DeleteSkuRequest
	6,  // 8: product.v1.Product.GetSku:input_type -> product.v1.GetSkuRequest
	8,  // 9: product.v1.Product.ListSku:input_type -> product.v1.ListSkuRequest
	12, // 10: product.v1.Product.PlaceUpSku:input_type -> product.v1.PlaceUpSkuRequest
	10, // 11: product.v1.Product.TakeDownSku:input_type -> product.v1.TakeDownSkuRequest
	14, // 12: product.v1.Product.CreateCombineSku:input_type -> product.v1.CreateCombineSkuRequest
	16, // 13: product.v1.Product.UpdateCombineSku:input_type -> product.v1.UpdateCombineSkuRequest
	18, // 14: product.v1.Product.DeleteCombineSku:input_type -> product.v1.DeleteCombineSkuRequest
	20, // 15: product.v1.Product.GetCombineSku:input_type -> product.v1.GetCombineSkuRequest
	22, // 16: product.v1.Product.ListCombineSku:input_type -> product.v1.ListCombineSkuRequest
	26, // 17: product.v1.Product.PlaceUpCombineSku:input_type -> product.v1.PlaceUpCombineSkuRequest
	24, // 18: product.v1.Product.TakeDownCombineSku:input_type -> product.v1.TakeDownCombineSkuRequest
	28, // 19: product.v1.Product.CreateCombineSkuItem:input_type -> product.v1.CreateCombineSkuItemRequest
	30, // 20: product.v1.Product.UpdateCombineSkuItem:input_type -> product.v1.UpdateCombineSkuItemRequest
	32, // 21: product.v1.Product.DeleteCombineSkuItem:input_type -> product.v1.DeleteCombineSkuItemRequest
	34, // 22: product.v1.Product.GetCombineSkuItem:input_type -> product.v1.GetCombineSkuItemRequest
	36, // 23: product.v1.Product.ListCombineSkuItem:input_type -> product.v1.ListCombineSkuItemRequest
	1,  // 24: product.v1.Product.CreateSku:output_type -> product.v1.CreateSkuReply
	3,  // 25: product.v1.Product.UpdateSku:output_type -> product.v1.UpdateSkuReply
	5,  // 26: product.v1.Product.DeleteSku:output_type -> product.v1.DeleteSkuReply
	7,  // 27: product.v1.Product.GetSku:output_type -> product.v1.GetSkuReply
	9,  // 28: product.v1.Product.ListSku:output_type -> product.v1.ListSkuReply
	13, // 29: product.v1.Product.PlaceUpSku:output_type -> product.v1.PlaceUpSkuReply
	11, // 30: product.v1.Product.TakeDownSku:output_type -> product.v1.TakeDownSkuReply
	15, // 31: product.v1.Product.CreateCombineSku:output_type -> product.v1.CreateCombineSkuReply
	17, // 32: product.v1.Product.UpdateCombineSku:output_type -> product.v1.UpdateCombineSkuReply
	19, // 33: product.v1.Product.DeleteCombineSku:output_type -> product.v1.DeleteCombineSkuReply
	21, // 34: product.v1.Product.GetCombineSku:output_type -> product.v1.GetCombineSkuReply
	23, // 35: product.v1.Product.ListCombineSku:output_type -> product.v1.ListCombineSkuReply
	27, // 36: product.v1.Product.PlaceUpCombineSku:output_type -> product.v1.PlaceUpCombineSkuReply
	25, // 37: product.v1.Product.TakeDownCombineSku:output_type -> product.v1.TakeDownCombineSkuReply
	29, // 38: product.v1.Product.CreateCombineSkuItem:output_type -> product.v1.CreateCombineSkuItemReply
	31, // 39: product.v1.Product.UpdateCombineSkuItem:output_type -> product.v1.UpdateCombineSkuItemReply
	33, // 40: product.v1.Product.DeleteCombineSkuItem:output_type -> product.v1.DeleteCombineSkuItemReply
	35, // 41: product.v1.Product.GetCombineSkuItem:output_type -> product.v1.GetCombineSkuItemReply
	37, // 42: product.v1.Product.ListCombineSkuItem:output_type -> product.v1.ListCombineSkuItemReply
	24, // [24:43] is the sub-list for method output_type
	5,  // [5:24] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_product_v1_product_proto_init() }
func file_product_v1_product_proto_init() {
	if File_product_v1_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_product_v1_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeDownSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeDownSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceUpSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceUpSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCombineSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCombineSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCombineSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCombineSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCombineSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCombineSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCombineSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCombineSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCombineSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCombineSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeDownCombineSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeDownCombineSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceUpCombineSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceUpCombineSkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCombineSkuItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCombineSkuItemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCombineSkuItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCombineSkuItemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCombineSkuItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCombineSkuItemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCombineSkuItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCombineSkuItemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCombineSkuItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCombineSkuItemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkuReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCombineSkuRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCombineSkuRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCombineSkuReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_v1_product_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCombineSkuItemReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_v1_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_v1_product_proto_goTypes,
		DependencyIndexes: file_product_v1_product_proto_depIdxs,
		MessageInfos:      file_product_v1_product_proto_msgTypes,
	}.Build()
	File_product_v1_product_proto = out.File
	file_product_v1_product_proto_rawDesc = nil
	file_product_v1_product_proto_goTypes = nil
	file_product_v1_product_proto_depIdxs = nil
}
